ARG REGISTRY
ARG GIT_TAG

FROM ${REGISTRY}/pingdownloader:${GIT_TAG} as staging
ARG PRODUCT
ARG VERSION
ARG PING_IDENTITY_SNAPSHOT


# MODE could be standalone, engine, upgrade
# the idea is to produce images with just-enough for their intended use
# to improve bootstrap time and reduce pressure on backhaul 
ARG MODE=standalone

ARG DEVOPS_USER
ARG DEVOPS_KEY

ARG DEPENDENCY_0_PRODUCT
ARG DEPENDENCY_0_VERSION

# copy your product zip file into the staging image
#
# For the record, the "|| :" expression means "or null"
# the null operator is no-op here but allows the subshell to return success either way 

# The line below avoids extracting the upgrade utility
#        -x pingfederate-*/pingfederate/upgrade/* \

# copy your product zip file into the staging image
RUN /get-bits.sh --product ${PRODUCT} \
        --version ${VERSION} \
        --devops-user ${DEVOPS_USER} \
        --devops-key ${DEVOPS_KEY} \
        --devops-app "pipeline-build-${PRODUCT}-${VERSION}" \
        ${PING_IDENTITY_SNAPSHOT} \
        --verify-gpg-signature \
	&& unzip /tmp/product.zip -d /tmp/ \
        -x */pingfederate-service-installer.jar \
        -x pingfederate-*/pingfederate/sdk/* \
        -x *.bat \
        -x *.dll \
        -x *.exe \
    && rm /tmp/product.zip \
    && mv /tmp/${PRODUCT}-${VERSION}/${PRODUCT} /opt/server \
    && rm -rf /tmp/pingfederate-* \
    && ( \
        test -n "${DEPENDENCY_0_PRODUCT}" \
        && test -n "${DEPENDENCY_0_VERSION}" \
        && /get-bits.sh --product ${DEPENDENCY_0_PRODUCT} \
            --version ${DEPENDENCY_0_VERSION} \
            --devops-user ${DEVOPS_USER} \
            --devops-key ${DEVOPS_KEY} \
            --devops-app "pipeline-build-${PRODUCT}-${VERSION}" \
            --verify-gpg-signature \
        && unzip /tmp/product.zip -d /tmp/ \
        && /tmp/${DEPENDENCY_0_PRODUCT}-${DEPENDENCY_0_VERSION}/apply-patch.sh --target /opt/server --no-backup \
        || : \
        )


# Flatten the bits layers to provide a compact product layer for all shims
FROM scratch
# get the product staged above (single slender layer)
COPY --from=staging ["opt/","/opt/"]
